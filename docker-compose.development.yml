version: "2"
services:
    postgres:
        image: postgres:14
        environment:
            POSTGRES_PASSWORD: testing
    opensearch-node1:
        image: opensearchproject/opensearch:2.1.0
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node1
            - bootstrap.memory_lock=true
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
            - "DISABLE_INSTALL_DEMO_CONFIG=true"
            - "DISABLE_SECURITY_PLUGIN=true"
            - "discovery.type=single-node"
    opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:2.1.0
        ports:
            - "127.0.0.1:5601:5601"
        environment:
            - "OPENSEARCH_HOSTS=['http://opensearch-node1:9200']"
            - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    development:
        build:
            context: ./
            dockerfile: Dockerfile
        read_only: true
        working_dir: /app
        environment:
            HOME: "/tmp/home"
            RUST_LOG: "server=info"
            DATABASE_URL: "postgres://postgres:testing@postgres"
            ADMIN_TOKEN: "123"
        user: "${CURRENT_UID}:${CURRENT_GID}"
        volumes:
            - ./:/app
        tmpfs:
            - /tmp:exec
        privileged: true
        ports:
            # gdbserver
            - "127.0.0.1:3345:3345"
            # polycentric web
            - "127.0.0.1:3000:3000"
            # harbor social
            - "127.0.0.1:3001:3001"
            # retype port
            - "127.0.0.1:8083:8083"
            # wrangler port
            - "127.0.0.1:8976:8976"
            - "127.0.0.1:8081:8081"
            - "127.0.0.1:8082:8082"
        command: tail -F wait_forever
    grafana:
        image: grafana/grafana:9.5.2
        restart: always
        depends_on:
            - influxdb
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
        links:
            - influxdb
        ports:
            - "8090:3000"
        volumes:
            - grafana_data:/var/lib/grafana
            - ./monitoring/grafana-dashboards-dev:/var/lib/grafana/dashboards
            - ./monitoring/provisioning:/etc/grafana/provisioning
    influxdb:
        image: influxdb:2.7-alpine
        restart: always
        environment:
            - DOCKER_INFLUXDB_INIT_MODE=setup
            - DOCKER_INFLUXDB_INIT_USERNAME=admin
            - DOCKER_INFLUXDB_INIT_PASSWORD=adminadminadminadmin
            - DOCKER_INFLUXDB_INIT_ORG=polycentric
            - DOCKER_INFLUXDB_INIT_BUCKET=polycentric
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin
        ports:
            - "8086:8086"
        volumes:
            - influxdb_data:/var/lib/influxdb2
    telegraf:
        image: telegraf:1.26.2-alpine
        restart: always
        user: "telegraf:${DOCKER_GID}"
        volumes:
            - ./monitoring/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - influxdb
        links:
            - influxdb
        ports:
            - "8125:8125"
volumes:
    grafana_data: { }
    influxdb_data: { }

