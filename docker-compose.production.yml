version: '2'
services:
    postgres:
        image: postgres:14
        environment:
            POSTGRES_PASSWORD: testing
        volumes:
            - ./state/postgres/data:/var/lib/postgresql/data
    opensearch-node1:
        image: opensearchproject/opensearch:2.1.0
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node1
            - bootstrap.memory_lock=true
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
            - "DISABLE_INSTALL_DEMO_CONFIG=true"
            - "DISABLE_SECURITY_PLUGIN=true"
            - "discovery.type=single-node"
        volumes:
            - ./state/opensearch/data:/usr/share/opensearch/data
    server:
        image: gitlab.futo.org:5050/polycentric/polycentric
        read_only: true
        environment:
            - "RUST_LOG=server=info"
            - "ADMIN_TOKEN=123"
    proxy:
        image: caddy
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ./state/caddy/data:/data
            - ./state/caddy/config:/config
        ports:
            - "0.0.0.0:80:80"
            - "0.0.0.0:443:443"
    grafana:
        image: grafana/grafana:9.5.2
        restart: always
        depends_on:
            - influxdb
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
        links:
            - influxdb
        ports:
            - "8090:3000"
        volumes:
            - grafana_data:/var/lib/grafana
            - ./monitoring/grafana-dashboards-prod:/var/lib/grafana/dashboards
            - ./monitoring/provisioning:/etc/grafana/provisioning
    influxdb:
        image: influxdb:2.7-alpine
        restart: always
        environment:
            - DOCKER_INFLUXDB_INIT_MODE=setup
            - DOCKER_INFLUXDB_INIT_USERNAME=admin
            - DOCKER_INFLUXDB_INIT_PASSWORD=adminadminadminadmin
            - DOCKER_INFLUXDB_INIT_ORG=polycentric
            - DOCKER_INFLUXDB_INIT_BUCKET=polycentric
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin
        ports:
            - "8086:8086"
        volumes:
            - influxdb_data:/var/lib/influxdb2
    telegraf:
        image: telegraf:1.26.2-alpine
        restart: always
        user: "telegraf:${DOCKER_GID}"
        volumes:
            - ./monitoring/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - influxdb
        links:
            - influxdb
        ports:
            - "8125:8125"
volumes:
    grafana_data: { }
    influxdb_data: { }
